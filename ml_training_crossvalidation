import pandas as pd
import lightgbm as lgb
from sklearn.model_selection import cross_val_score
from sklearn.preprocessing import LabelEncoder
from sklearn.metrics import accuracy_score

data = pd.read_csv("elofightstats.csv")
data['date'] = pd.to_datetime(data['date'], format='%b. %d, %Y')
data = data.sort_values(by='date')
data.replace("--", pd.NA, inplace=True)
data = data[(data['fighter_totalfights'] > 2) & (data['opponent_totalfights'] > 2)]
data = data[pd.to_datetime(data["date"]).dt.year >= 2010]

selected_columns = [
    "fighter_kd_differential",
    "fighter_str_differential",
    "fighter_td_differential",
    "fighter_sub_differential",
    "fighter_winstreak",
    "fighter_losestreak",
    "fighter_age_deviation",
    "fighter_titlefights",
    "fighter_titlewins",
    "fighter_opp_avg_elo",
    "fighter_elo",
    "opponent_kd_differential",
    "opponent_str_differential",
    "opponent_td_differential",
    "opponent_sub_differential",
    "opponent_winstreak",
    "opponent_losestreak",
    "opponent_age_deviation",
    "opponent_titlefights",
    "opponent_titlewins",
    "opponent_elo",
    "opponent_opp_avg_elo",
    "result",
]

data.dropna(subset=selected_columns, inplace=True)
data = data[selected_columns]

label_encoder = LabelEncoder()
data["result"] = label_encoder.fit_transform(data["result"])

X = data.drop("result", axis=1)
y = data["result"]

seed = 42

# Define the LightGBM classifier model
model = lgb.LGBMClassifier(random_state=seed)

# Perform cross-validation
scores = cross_val_score(model, X, y, cv=5)  # You can adjust the number of folds with the 'cv' parameter

# Print the cross-validation scores
print("Cross-validation scores:", scores)
print("Mean accuracy:", scores.mean())
